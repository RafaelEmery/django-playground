[project]
name = "django-playground"
version = "0.1.0"
description = "Playground to practice Python/Django and other stuffs"
authors = [
    {name = "rafael.emerycade@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "django (>=5.2.4,<6.0.0)",
    "djangorestframework (>=3.16.0,<4.0.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "drf-yasg (>=1.21.10,<2.0.0)",
    "django-filter (>=25.1,<26.0)",
    "pytest (>=8.4.2,<9.0.0)",
    "pytest-django (>=4.11.1,<5.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
ruff = "^0.12.7"
factory-boy = "^3.3.3"
pytest-cov = "^7.0.0"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "playground.settings"
norecursedirs = ["data"]

[tool.ruff]
lint.select = [
    "E",    #	pycodestyle errors
    "F",    #	pyflakes errors (unused imports, variables, etc)
    "W",    #	pycodestyle warnings
    "I",    #	Import sorting (isort)
    "DJ",   #	Django-specific rules
    "B",    #	Best practices (flake8-bugbear)
    "C90",  #	Code complexity (mccabe)
    "S",    #	Security rules (bandit)
    "T20",  #	String formatting (flake8-printf)
    "PT",   #	Test rules (pytest)
    "N",    #	Variable and naming rules (pep8-naming)
    "ERA",  #	Dead code (eradicate)
    "Q",    #	Quotes (flake8-quotes)
    "PL",   #	Pylint rules
    "SIM"   #	Code simplification (flake8-simplify)
]
lint.ignore = []
line-length = 100
target-version = "py311"

[tool.ruff.lint.per-file-ignores]
"playground/payments/tests/*" = ["S101", "PLR0913", "PT006"]

[tool.commitizen]
name = "cz_conventional_commits"

